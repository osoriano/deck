fragment actionDetails on MD_Action {
  id
  actionId
  actionType
  status
  startedAt
  completedAt
  link
}

fragment detailedVersionFields on MD_ArtifactVersionInEnvironment {
  id
  buildNumber
  version
  createdAt
  status
  isCurrent
  gitMetadata {
    commit
    author
    branch
    commitInfo {
      sha
      link
      message
    }
    pullRequest {
      number
      link
    }
    comparisonLinks {
      toPreviousVersion
      toCurrentVersion
    }
  }
  deployedAt
  lifecycleSteps {
    startedAt
    completedAt
    type
    status
    link
  }
  constraints {
    type
    status
    judgedBy
    judgedAt
    attributes
  }
  verifications {
    ...actionDetails
  }
  postDeploy {
    ...actionDetails
  }
  veto {
    vetoedBy
    vetoedAt
    comment
  }
}

fragment artifactPinnedVersionFields on MD_Artifact {
  pinnedVersion {
    id
    version
    buildNumber
    pinnedAt
    pinnedBy
    comment
    gitMetadata {
      commitInfo {
        message
      }
    }
  }
}

fragment baseEnvironmentFields on MD_Environment {
  id
  name
  isPreview
  gitMetadata {
    branch
    pullRequest {
      link
    }
  }
  basedOn
}

fragment baesResourceFields on MD_Resource {
  id
  kind
  displayName
  moniker {
    app
    stack
    detail
  }
  location {
    account
    regions
  }
  rawDefinition
}

query fetchApplication($appName: String!, $statuses: [MD_ArtifactStatusInEnvironment!]) {
  application: md_application(appName: $appName) {
    id
    name
    config {
      id
      previewEnvironmentsConfigured
    }
    environments {
      ...baseEnvironmentFields
      isDeleting
      state {
        id
        artifacts {
          id
          name
          environment
          type
          reference
          versions(statuses: $statuses) {
            ...detailedVersionFields
          }
          ...artifactPinnedVersionFields
          resources {
            ...baesResourceFields
          }
        }
        resources {
          ...baesResourceFields
        }
      }
    }
  }
}

query fetchCurrentVersion($appName: String!) {
  application: md_application(appName: $appName) {
    id
    name
    environments {
      id
      name
      state {
        artifacts {
          id
          name
          reference
          environment
          versions(statuses: [CURRENT]) {
            id
            version
            buildNumber
            createdAt
            gitMetadata {
              commit
              commitInfo {
                sha
                message
              }
            }
          }
        }
      }
    }
  }
}

query fetchVersionsHistory($appName: String!, $limit: Int) {
  application: md_application(appName: $appName) {
    id
    name
    environments {
      ...baseEnvironmentFields
      state {
        id
        artifacts {
          id
          name
          environment
          type
          reference
          versions(limit: $limit) {
            id
            buildNumber
            version
            createdAt
            status
            isCurrent
            gitMetadata {
              commit
              author
              branch
              commitInfo {
                sha
                link
                message
              }
              pullRequest {
                number
                link
              }
            }
          }
          ...artifactPinnedVersionFields
        }
      }
    }
  }
}

query fetchPinnedVersions($appName: String!) {
  application: md_application(appName: $appName) {
    id
    name
    account
    environments {
      id
      name
      state {
        id
        artifacts {
          id
          name
          environment
          type
          reference
          ...artifactPinnedVersionFields
        }
      }
    }
  }
}

query fetchVersion($appName: String!, $versions: [String!]) {
  application: md_application(appName: $appName) {
    id
    name
    account
    environments {
      id
      name
      state {
        id
        artifacts {
          id
          name
          environment
          type
          reference
          versions(versions: $versions) {
            ...detailedVersionFields
          }
        }
      }
    }
  }
}

query fetchResourceStatus($appName: String!) {
  application: md_application(appName: $appName) {
    id
    name
    environments {
      id
      name
      state {
        id
        resources {
          id
          kind
          state {
            status
            reason
            event
            tasks {
              id
              name
            }
          }
        }
      }
    }
  }
}

query fetchNotifications($appName: String!) {
  application: md_application(appName: $appName) {
    id
    name
    notifications {
      id
      level
      message
      triggeredAt
      link
      id
    }
  }
}

query fetchApplicationManagementData($appName: String!) {
  application: md_application(appName: $appName) {
    id
    name
    isPaused
    config {
      id
      updatedAt
      rawConfig
      processedConfig
    }
    gitIntegration {
      id
      repository
      branch
      isEnabled
      link
      manifestPath
    }
  }
}

query fetchApplicationManagementStatus($appName: String!) {
  application: md_application(appName: $appName) {
    id
    name
    isPaused
  }
}

mutation UpdateConstraint($payload: MD_ConstraintStatusPayload!) {
  md_updateConstraintStatus(payload: $payload)
}

mutation ToggleManagement($application: ID!, $isPaused: Boolean!) {
  md_toggleManagement(application: $application, isPaused: $isPaused)
}

mutation PinVersion($payload: MD_ArtifactVersionActionPayload!) {
  md_pinArtifactVersion(payload: $payload)
}

mutation UnpinVersion($payload: MD_UnpinArtifactVersionPayload!) {
  md_unpinArtifactVersion(payload: $payload)
}

mutation MarkVersionAsBad($payload: MD_ArtifactVersionActionPayload!) {
  md_markArtifactVersionAsBad(payload: $payload)
}

mutation MarkVersionAsGood($payload: MD_MarkArtifactVersionAsGoodPayload!) {
  md_markArtifactVersionAsGood(payload: $payload)
}

mutation RetryVersionAction($payload: MD_RetryArtifactActionPayload!) {
  md_retryArtifactVersionAction(payload: $payload) {
    ...actionDetails
  }
}

mutation UpdateGitIntegration($payload: MD_UpdateGitIntegrationPayload!) {
  md_updateGitIntegration(payload: $payload) {
    id
    isEnabled
  }
}

mutation DismissNotification($payload: MD_DismissNotificationPayload!) {
  md_dismissNotification(payload: $payload)
}

mutation ImportDeliveryConfig($application: String!) {
  md_importDeliveryConfig(application: $application)
}

mutation ToggleResourceManagement($payload: MD_ToggleResourceManagementPayload) {
  md_toggleResourceManagement(payload: $payload)
}

mutation RestartConstraintEvaluation($payload: MD_RestartConstraintEvaluationPayload!) {
  md_restartConstraintEvaluation(payload: $payload)
}
